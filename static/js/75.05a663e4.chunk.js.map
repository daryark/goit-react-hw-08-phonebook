{"version":3,"file":"static/js/75.05a663e4.chunk.js","mappings":"mWAqBO,SAASA,EAAT,GAA2D,IAAnCC,EAAkC,EAAlCA,SAAkC,IAAxBC,aAAAA,OAAwB,SAC/D,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASC,EAAAA,IAAA,kBAEPL,GAAgB,CAAEM,KAAMD,EAAAA,KAAaE,IAAI,GAAGC,IAAI,IAAIC,aAF7C,IAGXC,MAAOL,EAAAA,KAAaK,QAAQD,WAC5BE,SAAUN,EAAAA,KAAaE,IAAI,GAAGE,cAE/BA,WAEH,GAIIG,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYV,KAJtBW,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAgBf,OACE,UAAC,IAAD,CACElB,SAAUiB,GAbS,SAAAG,GACrBC,QAAQC,IAAI,SAAUJ,GACtBlB,EAASoB,EACV,IAWGG,GAAG,OACHC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,GAAI,GAPR,UAUG3B,GAAe,qCAAmB,oCAClCA,IACC,UAAC,IAAD,CACEuB,GAAI,CAAEK,EAAG,EAAGC,GAAI,EAAGC,MAAO,OAAQN,QAAS,SAC3CO,QAAQ,WAFV,WAIE,SAAC,IAAD,CAAYC,QAAQ,0BAApB,mBACA,SAAC,KAAD,kBACMjB,EAAS,SADf,IAEEkB,GAAG,0BACHC,cACE,SAAC,IAAD,CAAgBC,SAAS,MAAzB,UACE,SAAC,IAAD,MAGJC,MAAM,cAIZ,UAAC,IAAD,CACEb,GAAI,CAAEK,EAAG,EAAGC,GAAI,EAAGC,MAAO,OAAQN,QAAS,SAC3CO,QAAQ,WAFV,WAIE,SAAC,IAAD,CAAYC,QAAQ,2BAApB,oBACA,SAAC,KAAD,kBACMjB,EAAS,UADf,IAEEkB,GAAG,2BACHC,cACE,SAAC,IAAD,CAAgBC,SAAS,MAAzB,UACE,SAAC,IAAD,MAGJC,MAAM,kBAIV,UAAC,IAAD,CACEb,GAAI,CAAEK,EAAG,EAAGC,GAAI,EAAGC,MAAO,SAAUN,QAAS,SAC7CO,QAAQ,WAFV,WAIE,SAAC,IAAD,CAAYC,QAAQ,8BAApB,uBACA,SAAC,KAAD,kBACMjB,EAAS,aADf,IAEEkB,GAAG,8BACHI,KAAMnC,EAAe,OAAS,WAC9BgC,cACE,SAAC,IAAD,CAAgBC,SAAS,MAAzB,UACE,SAAC,IAAD,CACE,aAAW,6BACXG,QAlEkB,kBAAMnC,GAAgB,SAAAoC,GAAI,OAAKA,CAAL,GAA1B,EAmElBC,YAjEkB,SAAAC,GAC9BA,EAAMC,gBACP,EAgEaC,KAAK,MAJP,SAMGzC,GAAe,SAAC,IAAD,KAAoB,SAAC,IAAD,QAI1CkC,MAAM,kBAIV,SAAC,IAAD,CAAQb,GAAI,CAAEK,EAAG,EAAGE,MAAO,QAAUO,KAAK,SAASN,QAAQ,YAA3D,sBAKL,C,6ICvHc,SAASa,IACtB,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,GACzBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHP,GAELG,EAAS,YACV,GAAE,CAACH,EAAYG,IAIhB,OAAO,SAAC,IAAD,CAAcjD,SAFD,SAAAoB,GAAI,OAAI+B,GAASG,EAAAA,EAAAA,IAAUlC,GAAvB,GAGzB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/SignInPage/SignInPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nimport {\n  FormControl,\n  Button,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Box,\n} from '@mui/material';\nimport {\n  AccountCircleRounded,\n  Email,\n  Visibility,\n  VisibilityOff,\n} from '@mui/icons-material';\n\nexport function RegisterForm({ onSubmit, isSignUpForm = false }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const schema = yup\n    .object({\n      ...(isSignUpForm && { name: yup.string().min(2).max(20).required() }),\n      email: yup.string().email().required(),\n      password: yup.string().min(7).required(),\n    })\n    .required();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const registerSubmit = data => {\n    console.log('errors', errors);\n    onSubmit(data);\n  };\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <Box\n      onSubmit={handleSubmit(registerSubmit)}\n      as=\"form\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        mt: 2,\n      }}\n    >\n      {isSignUpForm ? <h1>Sign Up</h1> : <h1>Sign In</h1>}\n      {isSignUpForm && (\n        <FormControl\n          sx={{ m: 1, ml: 0, width: '30ch', display: 'block' }}\n          variant=\"outlined\"\n        >\n          <InputLabel htmlFor=\"outlined-adornment-name\">Name</InputLabel>\n          <OutlinedInput\n            {...register('name')}\n            id=\"outlined-adornment-name\"\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <AccountCircleRounded />\n              </InputAdornment>\n            }\n            label=\"Name\"\n          />\n        </FormControl>\n      )}\n      <FormControl\n        sx={{ m: 1, ml: 0, width: '30ch', display: 'block' }}\n        variant=\"outlined\"\n      >\n        <InputLabel htmlFor=\"outlined-adornment-email\">Email</InputLabel>\n        <OutlinedInput\n          {...register('email')}\n          id=\"outlined-adornment-email\"\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <Email />\n            </InputAdornment>\n          }\n          label=\"Password\"\n        />\n      </FormControl>\n\n      <FormControl\n        sx={{ m: 1, ml: 0, width: '29.6ch', display: 'block' }}\n        variant=\"outlined\"\n      >\n        <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n        <OutlinedInput\n          {...register('password')}\n          id=\"outlined-adornment-password\"\n          type={showPassword ? 'text' : 'password'}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          }\n          label=\"Password\"\n        />\n      </FormControl>\n\n      <Button sx={{ m: 2, width: '15ch' }} type=\"submit\" variant=\"contained\">\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { loginUser } from 'redux/user/operations';\nimport { useNavigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from 'redux/user/selectors';\n\nexport default function SignInPage() {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    navigate('/contacts');\n  }, [isLoggedIn, navigate]);\n\n  const handleLogin = data => dispatch(loginUser(data));\n\n  return <RegisterForm onSubmit={handleLogin} />;\n}\n"],"names":["RegisterForm","onSubmit","isSignUpForm","useState","showPassword","setShowPassword","schema","yup","name","min","max","required","email","password","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","data","console","log","as","sx","display","flexDirection","alignItems","mt","m","ml","width","variant","htmlFor","id","endAdornment","position","label","type","onClick","show","onMouseDown","event","preventDefault","edge","SignInPage","isLoggedIn","useSelector","selectIsLoggedIn","navigate","useNavigate","dispatch","useDispatch","useEffect","loginUser"],"sourceRoot":""}